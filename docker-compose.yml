# networks 를 host로 설정하고 각 컨테이너 entrypoint.sh 를 동작 후 redis-cluster-entry에 커멘드 실행하면 동작은 됨

version: "3.8"
services:
  redis-cluster:
    image: aysel0413/redis:0.1
    container_name: redis-master
    network_mode: host
    ports:
      - 7000:7000
    volumes: # 작성한 설정 파일을 볼륨을 통해 컨테이너에 공유
      - ./conf1/redis.conf:/usr/local/etc/redis/redis.conf
      - ./conf1/entrypoint.sh:/usr/local/bin/entrypoint.sh  # 스크립트 파일 추가
    command: sh /usr/local/bin/entrypoint.sh  # 엔트리포인트 스크립트 실행

  redis-node-1:
    image: aysel0413/redis:0.1
    container_name: redis-slave1
    network_mode: host
    ports:
      - 7001:7001
    volumes:
      - ./conf2/redis.conf:/usr/local/etc/redis/redis.conf
      - ./conf2/entrypoint.sh:/usr/local/bin/entrypoint.sh  # 스크립트 파일 추가
    command: sh /usr/local/bin/entrypoint.sh  # 엔트리포인트 스크립트 실행

  redis-node-2:
    image: aysel0413/redis:0.1
    container_name: redis-slave2
    network_mode: host
    ports:
      - 7002:7002
    volumes:
      - ./conf3/redis.conf:/usr/local/etc/redis/redis.conf
      - ./conf3/entrypoint.sh:/usr/local/bin/entrypoint.sh  # 스크립트 파일 추가
    command: sh /usr/local/bin/entrypoint.sh  # 엔트리포인트 스크립트 실행

  redis-cluster-entry:
    image: aysel0413/redis:0.1
    container_name: redis-cluster-entry
    network_mode: host
    ports:
      - 6379:6379
#    command: redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 --cluster-yes
    depends_on:
      - redis-cluster
      - redis-node-1
      - redis-node-2